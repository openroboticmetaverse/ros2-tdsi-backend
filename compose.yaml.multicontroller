# Service configuration for the TDSI ROS2 backend container
services:
  tdsi_ros2_backend_1:
    container_name: tdsi_ros2_backend_1

    build:
      # Directory containing the Dockerfile
      context: ./docker
      dockerfile: Dockerfile

    # Map ports from the container to the host
    ports:
      # Default port for ROS2 bridge (Change if necessary)
      - "9090:9090"

    # Environment variables
    environment:
      # ROS2 Domain ID
      - ROS_DOMAIN_ID=30
      # ROSBridge port (Change if necessary)
      - ROSBRIDGE_PORT=9090

    # Enable TTY and allocate a pseudo-TTY
    tty: true

    # Allow access to devices from the container
    devices:
      # Event device (e.g. joystick)
      - "/dev/input/event25:/dev/input/event25"
      # Joystick event
      - "/dev/input/js0:/dev/input/js0"

    # Networking configuration
    networks:
      # Use the tdsi-network network
      - tdsi-network

  tdsi_ros2_backend_2:
    container_name: tdsi_ros2_backend_2

    build:
      # Directory containing the Dockerfile
      context: ./docker
      dockerfile: Dockerfile

    # Map ports from the container to the host
    ports:
      # Default port for ROS2 bridge (Change if necessary)
      - "9091:9091"

    # Environment variables
    environment:
      # ROS2 Domain ID
      - ROS_DOMAIN_ID=31
      # ROSBridge port (Change if necessary)
      - ROSBRIDGE_PORT=9091

    # Enable TTY and allocate a pseudo-TTY
    tty: true

    # Allow access to devices from the container
    devices:
      # Event device (e.g. joystick)
      - "/dev/input/event26:/dev/input/event26"
      # Joystick event
      - "/dev/input/js1:/dev/input/js1"

    # Networking configuration
    networks:
      # Use the tdsi-network network
      - tdsi-network
networks:
  tdsi-network:
    driver: bridge
    name: tdsi-network # Specify a custom network name for clarity
